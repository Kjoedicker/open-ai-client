import requests

class OpenAiClient:
    '''
    A Python client for making calls to the Open-AI API
    
    Usage:
    >>> from client import OpenAiClient
    >>> instance = OpenAiClient("someUrl", "someapi_key)
    >>> instance.ask("How to make proper doc comments in python")
    
    '''
    
    def __init__(self, base_url: str, api_key: str):
        '''
        - model: GPT-2 is a transformer-based language model developed by OpenAI. It is a large-scale unsupervised language model which generates human-like text when given a prompt.
        - temperature: Temperature is a hyperparameter that controls the randomness of the text generated by the model. A higher temperature will produce more diverse text, while a lower temperature will produce more repetitive text.
        - max_tokens: Max_tokens is the maximum number of tokens (words or characters) that the model can generate.
        - top_p: Top_p is a hyperparameter that controls the diversity of the text generated by the model. It specifies the probability of the model selecting the most likely token at each step.
        - frequency_penalty: Frequency_penalty is a hyperparameter that controls the frequency of words in the generated text. A higher frequency penalty will reduce the frequency of words in the generated text.
        - presence_penalty: Presence_penalty is a hyperparameter that controls the presence of words in the generated text. A higher presence penalty will reduce the presence of words in the generated text.
        '''

        self.base_url = base_url
        self.api_key  = api_key
        
        self.headers = {
            'Authorization': 'Bearer ' + self.api_key,
        }
          
        self.data = {
            "model": "text-davinci-003",
            "temperature": 0.3,
            "max_tokens": 1000,
            "top_p": 1,
            "frequency_penalty": 0,
            "presence_penalty": 0,
        }
    
    def makeCall(self):
        '''
        Make a call to Open AI
        
        - Rate limit of 1 request per second
        '''

        return requests.post(
            self.base_url, 
            headers=self.headers, 
            json=self.data
        )
    
    def ask(self, prompt: str):
        '''
        Reach out to Open AI with the provided prompt
        
        A prompt in OpenAI is a text or image that is used to initiate a conversation with a chatbot or other AI-powered system. 
        It can be used to provide context for the conversation or to help the AI understand the user's intent.
        '''

        self.data['prompt'] = prompt
        
        try:
            response = self.makeCall()
            choices = list(map(lambda x: x['text'], response.json()['choices']))
            return choices
        except Exception as err:
            print(f'Error making call to OpenAI: {err}')
            
